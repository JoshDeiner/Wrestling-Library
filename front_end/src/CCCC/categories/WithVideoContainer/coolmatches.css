
p {
  color: purple;
  font-weight: bold;
  font-size: 250%
}

.matchescontainer {
  width: 100%;
  height: 100%;

}

.card {
  display: grid;
  grid-gap: 10px;
  padding: 10px;
  grid-template-columns: auto auto auto ;
}





.nextpage {
  text-align: center
}
.notdan {
  text-align: left
}

.dan {
  text-align: center
}

.matches{
  text-align: left;
  padding-left: 1%;

}

h6{
  color: red
}

.card {
  text-align: left;
  padding-left: 1%;

  display: grid;
  grid-template-columns: auto auto;
  grid-gap: 10px;
  padding: 10px;


}

.matchescontainer::after {
  content: "";
  opacity: 0.39;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  position: absolute;
  background-image: url('https://e.lvme.me/rovlta9.jpg');
  background-repeat: no-repeat;
  background-size: 100%;
  background-color: lightblue;
  z-index: -1;
}
h4 {
  color: magenta;
}






.flex-container {
  /* We first create a flex layout context */
  display: flex;


  /* Then we define the flow direction
     and if we allow the items to wrap
   * Remember this is the same as:
   * flex-direction: row;
   * flex-wrap: wrap;
   */
  flex-flow: row wrap;

  /* Then we define how is distributed the remaining space */
  justify-content: space-around;
}
